name: Docker

on:
  push:
    branches:
      - main

jobs:
  build-platforms:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        tag: [x86_64_musl, armv7_musl, arm64_musl]
        platform: [linux/amd64, linux/arm64]
        include:
          - tag: x86_64_musl
            target: x86_64-unknown-linux-musl
          - tag: armv7_musl
            target: armv7-unknown-linux-musleabihf
          - tag: arm64_musl
            target: aarch64-linux-musl
          - platform: linux/amd64
            suffix: linux-amd64
          - platform: linux/arm64
            suffix: linux-arm64

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        run: |
          IMAGE_ID=ghcr.io/chipp/build.musl.${{ matrix.tag }}

          MUSL_VERSION=musl_$(cat musl-cross-make/config.mak | grep "MUSL_VER" | sed -e 's,MUSL_VER = \(.*\),\1,' | tr -d '\n')
          LAST_REVISION=$(git ls-remote --tags origin | grep $MUSL_VERSION | sort -r | head -n 1 | sed -e 's,.*_\(.*\),\1,')
          FULL_REVISION=${MUSL_VERSION}_$((LAST_REVISION+1))

          echo IMAGE_ID=$IMAGE_ID
          echo MUSL_VERSION=$MUSL_VERSION
          echo FULL_REVISION=$FULL_REVISION

          docker buildx build . \
             --push \
             --build-arg TARGET="${{ matrix.target }}" \
             --label "org.opencontainers.image.source=https://github.com/${{ github.repository }}" \
             --platform ${{ matrix.platform }} \
             --tag $IMAGE_ID:$FULL_REVISION-${{ matrix.suffix }} \
             --cache-from=type=registry,ref=$IMAGE_ID:cache-${{ matrix.suffix }} \
             --cache-to=type=registry,ref=$IMAGE_ID:cache-${{ matrix.suffix }},mode=max

  merge-multi-arch:
    runs-on: ubuntu-latest
    needs: build-platforms
    strategy:
      matrix:
        tag: [x86_64_musl, armv7_musl, arm64_musl]

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Merge and push
        run: |
          MUSL_VERSION=musl_$(cat musl-cross-make/config.mak | grep "MUSL_VER" | sed -e 's,MUSL_VER = \(.*\),\1,' | tr -d '\n')
          LAST_REVISION=$(git ls-remote --tags origin | grep $MUSL_VERSION | sort -r | head -n 1 | sed -e 's,.*_\(.*\),\1,')
          FULL_REVISION=${MUSL_VERSION}_$((LAST_REVISION+1))

          echo IMAGE_ID=$IMAGE_ID
          echo MUSL_VERSION=$MUSL_VERSION
          echo FULL_REVISION=$FULL_REVISION

          docker buildx imagetools create \
             --tag $IMAGE_ID:$FULL_REVISION \
             --tag $IMAGE_ID:latest \
             $IMAGE_ID:$FULL_REVISION-linux-amd64 \
             $IMAGE_ID:$FULL_REVISION-linux-arm64

      - name: Create a tag
        run: |
          MUSL_VERSION=musl_$(cat musl-cross-make/config.mak | grep "MUSL_VER" | sed -e 's,MUSL_VER = \(.*\),\1,' | tr -d '\n')
          LAST_REVISION=$(git ls-remote --tags origin | grep $MUSL_VERSION | sort -r | head -n 1 | sed -e 's,.*_\(.*\),\1,')
          FULL_REVISION=${MUSL_VERSION}_$((LAST_REVISION+1))

          git tag $FULL_REVISION HEAD
          git push origin $FULL_REVISION
