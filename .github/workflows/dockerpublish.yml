name: Docker

on:
  push:
    tags:
       - '*'

env:
  OWNER: chipp

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    strategy:
      matrix:
        tag: [x86_64_musl, armv7_musl]
        include:
          - tag: x86_64_musl
            target: x86_64-unknown-linux-musl
            openssl_arch: linux-x86_64
            additional_libs:
          - tag: armv7_musl
            target: armv7-unknown-linux-musleabihf
            openssl_arch: linux-generic32
            additional_libs: -latomic

    env:
      IMAGE_NAME: build.musl.${{ matrix.tag }}

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build and push image
        run: |
          IMAGE_ID=ghcr.io/$OWNER/$IMAGE_NAME

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker buildx build . \
             --push \
             --build-arg TARGET="${{ matrix.target }}" \
             --build-arg OPENSSL_ARCH="${{ matrix.openssl_arch }}" \
             --build-arg ADDITIONAL_LIBS="${{ matrix.additional_libs }}" \
             --label "org.opencontainers.image.source=https://github.com/${{ github.repository }}" \
             --platform linux/amd64,linux/arm64 \
             --tag $IMAGE_ID:$VERSION \
             --tag $IMAGE_ID:latest \
             --cache-from=type=registry,ref=ghcr.io/$OWNER/$IMAGE_NAME:cache \
             --cache-to=type=registry,ref=ghcr.io/$OWNER/$IMAGE_NAME:cache,mode=max
